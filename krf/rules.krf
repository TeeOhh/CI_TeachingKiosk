;;;; ---------------------------------------------------------------------------
;;;; File name: rules.krf
;;;;    System: Kiosk Learning
;;;;    Author: Taylor Olson
;;;;   Created: May 8, 2019 16:00:09
;;;;   Purpose: 
;;;; ---------------------------------------------------------------------------
(in-microtheory TeachingKioskMt)

;; extract interests and preferences based on courses taken
(<== (recommendNUEvent ?person ?event)
	(interests ?person ?topic)
	(academicTopicOf ?event ?topic)
	(isa ?event NUEvent))

;; Give all courses then flag those that, to our knowledge, they haven't passed pre-reqs for?
;; Or... only return those that they have passed pre-reqs?

;; Add option to specify a quarter?...

(<== (recommendCourse ?person ?course)
     (interests ?person ?interest)
     (isa ?interest AcademicTopic)
     (isa ?course NUCourse) ;faster before or after academicTopicOf?
     (academicTopicOf ?course ?interest)
     (uninferredSentence (passedClass ?person ?course))
     (uninferredSentence (enrolledInClass ?person ?course)))

;; Recommend courses in subtopics of interests as well.
(<== (recommendCourse ?person ?course)
     (interests ?person ?interest)
     (isa ?interest AcademicTopic)
     (isa ?course NUCourse)
     (subTopic ?interest ?subtopic)
     (academicTopicOf ?course ?subtopic)
     (uninferredSentence (passedClass ?course ?person))
     (uninferredSentence (enrolledInClass ?course ?person)))

;; A naive assumption that one who teaches a course in a topic, is an expert in a topic...
(<== (expertInAcademicTopic ?person ?topic)
	(academicTopicOf ?course ?topic)
	(courseInstructor ?course ?person))

;; One who teaches a course in a subtopic of an academic area, is an expert in that academic area.
;; (i.e. Teaching ML course -> expert in AI)
(<== (expertInAcademicTopic ?person ?topic)
	(subTopic ?topic ?subtopic)
	(academicTopicOf ?course ?subtopic)
	(isa ?course NUCourse)
	(courseInstructor ?course ?person))

;; One who is in a research lab that focuses on a certain topic, is an expert in that topic.
(<== (expertInAcademicTopic ?person ?topic)
	(academicTopicOf ?group ?topic)
	(nuGroupMember ?group ?person)
	(isa ?group NUGroup))

;; One who is in a research lab that focuses on a certain topic, is an expert in all general topics of that topic.
;; (i.e. In ML lab -> expert in AI -> expert in CS)
(<== (expertInAcademicTopic ?person ?topic)
	(subTopic ?topic ?subtopic)
	(academicTopicOf ?course ?subtopic)
	(isa ?course NUCourse)
	(courseInstructor ?course ?person))

(<== (preReqsSatisfied ?course ?person)
	(preReq ?prereq ?course)
	(passedClass ?prereq ?person))

;; if a student has passed a course with pre-reqs, assume they've passed pre-reqs
(<== (passedClass ?prereq ?person)
	(preReq ?prereq ?course)
	(passedClass ?course ?person))

;; subTopic generals inference base case
(<== (subTopic ?topic ?topic2)
     (subTopicOf ?topic ?topic2 1))

;; subTopic transitvity
(<== (subTopic ?grandparent ?child)
     (subTopicOf ?grandparent ?parent 1)
     (subTopic ?parent ?child))

;; controlled depth with transitivity using subTopicOf
;;(<== (subTopicOf ?grandparent ?child ?dis3)
;;     (subTopicOf ?grandparent ?parent ?dis2)
;;     (subTopicOf ?parent ?child ?dis3))
;;     (evaluate ?dis3 (PlusFn ?dis3 ?dis2))

;; One is a member of a research lab/group if their advisor is
(<== (nuGroupMember ?group ?person)
	(advisorOf ?person ?advisor)
	(nuGroupMember ?group ?advisor))

;; This isn't true if a student has multiple advisors...
;;(<== (nuGroupMember ?group ?advisor)
;;	(advisorOf ?person ?advisor)
;;	(nuGroupMember ?group ?person))

;; Schedule inference
;; ------------------------------------------------------------------------
;;(<== (busyDoingAt ?person ?class ?at)
;;	(enrolledInClass ?class ?person)
;;	(timeIntervalOf ?class ?at))

;;(<== (busyDoingAt ?person ?class ?at)
;;	(courseInstructor ?class ?person)
;;	(timeIntervalOf ?class ?at))

;;(<== (busyDoingAt ?person ?class ?at)
;;	(taForClass ?class ?person)
;;	(timeIntervalOf ?class ?at))

;;(<== (busyDoingAt ?person ?club ?at)
;;	(nuClubMember ?person ?club)
;;	(timeIntervalOf ?club ?at))